{
  "id" : "orders_items",
  "metainfo" : {
    "label" : "orders_items",
    "autoLayout" : true,
    "staleState" : "none",
    "sourceSuggestions" : {
      "sources" : [ ]
    },
    "version" : 3
  },
  "processes" : {
    "cYIHWiPK" : {
      "id" : "cYIHWiPK",
      "component" : "TargetModel",
      "metadata" : {
        "label" : "orders_items",
        "phase" : 0
      },
      "properties" : {
        "customQueryDisabled" : true,
        "customQuery" : true,
        "incrementalEditorDisabled" : true,
        "query" : "{{\n    config(\n        materialized = 'table'\n    )\n}}\nwith orders as (\n    \n    select * from {{ ref('base_orders') }}\n\n),\nline_items as (\n\n    select * from {{ ref('base_line_item') }}\n\n)\nselect \n\n    {{ dbt_utils.surrogate_key('o.order_key', 'l.order_line_number') }} as order_item_key,\n\n    o.order_key,\n    o.order_date,\n    o.customer_key,\n    o.order_status_code,\n    \n    l.part_key,\n    l.supplier_key,\n    l.return_status_code,\n    l.order_line_number,\n    l.order_line_status_code,\n    l.ship_date,\n    l.commit_date,\n    l.receipt_date,\n    l.ship_mode_name,\n\n    l.quantity,\n    \n    -- extended_price is actually the line item total,\n    -- so we back out the extended price per item\n    (l.extended_price/nullif(l.quantity, 0)){{ money() }} as base_price,\n    l.discount_percentage,\n    (base_price * (1 - l.discount_percentage)){{ money() }} as discounted_price,\n\n    l.extended_price as gross_item_sales_amount,\n    (l.extended_price * (1 - l.discount_percentage)){{ money() }} as discounted_item_sales_amount,\n    -- We model discounts as negative amounts\n    (-1 * l.extended_price * l.discount_percentage){{ money() }} as item_discount_amount,\n    l.tax_rate,\n    ((gross_item_sales_amount + item_discount_amount) * l.tax_rate){{ money() }} as item_tax_amount,\n    (\n        gross_item_sales_amount + \n        item_discount_amount + \n        item_tax_amount\n    ){{ money() }} as net_item_sales_amount\n\nfrom\n    orders o\n    join\n    line_items l\n        on o.order_key = l.order_key\norder by\n    o.order_date",
        "incrementalKey" : false,
        "incremental" : {
          "expression" : "true"
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "aF5jfViT",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : true,
        "autoUpdateOnRun" : true
      }
    }
  },
  "connections" : [ ],
  "component" : "Model"
}